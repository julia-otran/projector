<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>projector-linux</artifactId>
    <version>${revision}</version>

    <parent>
        <groupId>dev.juhouse.projector</groupId>
        <artifactId>projector</artifactId>
        <version>${revision}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <classifier>linux</classifier>
    </properties>

    <name>Projector Linux</name>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${fx.version}</version>
            <classifier>${classifier}</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${fx.version}</version>
            <classifier>${classifier}</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${fx.version}</version>
            <classifier>${classifier}</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${fx.version}</version>
            <classifier>${classifier}</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${fx.version}</version>
            <classifier>${classifier}</classifier>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${fx.version}</version>
            <classifier>${classifier}</classifier>
        </dependency>

        <dependency>
            <groupId>dev.juhouse.projector</groupId>
            <artifactId>projector-core</artifactId>
            <version>${revision}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-fxml</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-11</version>
                <extensions>true</extensions>
                <configuration>
                    <javahOS>linux</javahOS>
                    <sources>
                        <source>
                            <directory>../core/native/tinycthread/source</directory>
                            <fileNames>
                                <fileName>tinycthread.c</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>../core/native/cJSON</directory>
                            <fileNames>
                                <fileName>cJSON.c</fileName>
                                <fileName>cJSON_Utils.c</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <!-- path to the C/C++ sources -->
                            <directory>../core/native/render</directory>
                            <fileNames>
                                <fileName>clock.c</fileName>
                                <fileName>config.c</fileName>
                                <fileName>config-debug.c</fileName>
                                <fileName>config-parse.c</fileName>
                                <fileName>config-serialize.c</fileName>
                                <fileName>debug.c</fileName>
                                <fileName>lib-render.c</fileName>
                                <fileName>loop.c</fileName>
                                <fileName>monitor.c</fileName>
                                <fileName>ogl-loader.c</fileName>
                                <fileName>render.c</fileName>
                                <fileName>render-fader.c</fileName>
                                <fileName>render-image.c</fileName>
                                <fileName>render-pixel-unpack-buffer.c</fileName>
                                <fileName>render-preview.c</fileName>
                                <fileName>render-text.c</fileName>
                                <fileName>render-text-outline-shader.c</fileName>
                                <fileName>render-video.c</fileName>
                                <fileName>render-web-view.c</fileName>
                                <fileName>virtual-screen.c</fileName>
                                <fileName>vs-color-corrector.c</fileName>
                                <fileName>vs-blend.c</fileName>
                            </fileNames>
                        </source>
                    </sources>
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>gcc</compilerExecutable>
                    <!-- compiler options -->
                    <compilerStartOptions>
                        <compilerStartOption>-m64</compilerStartOption>
                        <compilerStartOption>-Wall</compilerStartOption>
                        <compilerStartOption>-Wextra</compilerStartOption>
                        <compilerStartOption>-Wno-unused-parameter</compilerStartOption>
                        <compilerStartOption>-O3</compilerStartOption>
                        <compilerStartOption>-I${project.basedir}/../core/native/include</compilerStartOption>
                        <compilerStartOption>-I${project.basedir}/../core/native/cJSON</compilerStartOption>
                        <compilerStartOption>-I${project.basedir}/../core/native/tinycthread/source</compilerStartOption>
                        <compilerStartOption>-I/usr/include</compilerStartOption>
                        <compilerStartOption>-I${java.home}/include</compilerStartOption>
                        <compilerStartOption>-I${java.home}/include/linux</compilerStartOption>
                        <compilerStartOption>-fPIC</compilerStartOption>
                        <compilerStartOption>-DENABLE_LOCALES</compilerStartOption>
                    </compilerStartOptions>
                    <linkerOutputDirectory>target</linkerOutputDirectory>
                    <linkerExecutable>gcc</linkerExecutable>
                    <!-- linker options -->
                    <linkerStartOptions>
                        <linkerStartOption>-m64</linkerStartOption>
                        <linkerStartOption>-shared</linkerStartOption>
                    </linkerStartOptions>
                    <linkerEndOptions>
                        <linkerEndOption>-L/usr/lib64</linkerEndOption>
                        <linkerEndOption>-lGLEW</linkerEndOption>
                        <linkerEndOption>-lGL</linkerEndOption>
                        <linkerEndOption>-lX11</linkerEndOption>
                        <linkerEndOption>
                            -L/usr/lib
                        </linkerEndOption>
                        <linkerEndOption>
                            -lglfw
                        </linkerEndOption>
                        <linkerEndOption>
                            -o ${project.build.outputDirectory}/lib${lib_name}.so
                        </linkerEndOption>
                    </linkerEndOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>compile-lib-render</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>initialize</goal>
                            <goal>compile</goal>
                            <goal>link</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.4</version>
                <configuration>
                    <mainClass>dev.juhouse.projector.Main</mainClass>
                </configuration>
            </plugin>

            <!-- Maven Assembly Plugin -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <!-- get all project dependencies -->
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <!-- MainClass in mainfest make a executable jar -->
                    <archive>
                        <manifest>
                            <mainClass>dev.juhouse.projector.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <!-- bind to the packaging phase -->
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
